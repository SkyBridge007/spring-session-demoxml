<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- tag::beans[] -->
	
	<!--该Spring配置负责创建一个Servlet过滤器以便依赖SpringSession取代容器默认HttpSession实现.-->
	<!-- 
	<context:component-scan base-package="com.bridge.session" >
		 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> -->
	<context:annotation-config/>
	<bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>
	<!-- 该配置将启用HttpHeader中新增x-auth-token的方式维持回话，默认是采用cookie方式. -->
	<!-- <bean class="org.springframework.session.web.http.HeaderHttpSessionStrategy"></bean> -->

	<!--redis单节点连接工厂配置,两种配置方式任选其一. -->
	<!-- No.1
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="10.16.69.184" p:port="6379" />
	 -->
	 <!-- No.2 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="10.16.69.184"/>
		<property name="port" value="6379"/>
	</bean>
	 
	<!--No.3 以连接池的方式配置redis,不推荐使用，已停用-->
	<!-- 
	<bean id="jredisConnectionFactory" class="org.springframework.data.redis.connection.jredis.JredisConnectionFactory">
    	<constructor-arg>
      	<bean class="org.springframework.data.redis.connection.jredis.DefaultJredisPool">
        	<constructor-arg value="10.16.69.184" />
        	<constructor-arg value="6379" />
      	</bean>
    	</constructor-arg>
  	</bean>
  	 -->
  	<!--No.4 SRP (an acronym for Sam’s Redis Protocol),不推荐使用,需要com.google.common.base.Charsets 支持-->
  	<!-- 
  	<bean id="srpConnectionFactory" class="org.springframework.data.redis.connection.srp.SrpConnectionFactory" p:host-name="10.16.69.184" p:port="6379"/>
	 -->
	<!--No.5 Lettuce  需要com.lambdaworks.redis 支持-->
	<!-- 
	<bean id="lettuceConnectionFactory" class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory" p:host-name="10.16.69.184" p:port="6379"/>
	 -->
	 
	 <!-- 引入Redis cluster config 配置 -->
	<!-- <import resource="classpath*:spring-redis-config.xml" /> -->
	<!-- 
	 <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
 		<property name="maxTotal" value="4096"/>
 		<property name="maxIdle" value="200"/>
 		<property name="maxWaitMillis" value="3000"/>
 		<property name="testOnBorrow" value="true" />
 		<property name="testOnReturn" value="true" />
 	</bean>
 	
 	<bean id = "jedisCluster" class = "redis.clients.jedis.JedisCluster">
 		<constructor-arg index="0">
 			<set>
 				<bean class="redis.clients.jedis.HostAndPort">
 					<constructor-arg index="0" value="10.16.69.184" />
 					<constructor-arg index="1" value="6376" />
			 	</bean>
			 </set>
 		</constructor-arg>
 		<constructor-arg index="1" value="2000" type="int"/>
 		<constructor-arg index="2" value="2" type="int"/>
	 	<constructor-arg index="3" ref="poolConfig"/>
	 </bean>
	  -->
	 <!-- 
	 <bean id = "jedisPool" class = "redis.clients.jedis.JedisPool">
 		<constructor-arg index="0" ref="poolConfig"/>
 		<constructor-arg index="1" value="10.16.69.184"/>
 		<constructor-arg index="2" value="6379" type="int"/>
	 </bean>
	  -->
	<!-- end::beans[] -->
</beans>